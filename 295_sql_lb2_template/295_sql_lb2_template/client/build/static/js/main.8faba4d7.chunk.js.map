{"version":3,"sources":["utils.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["countries","require","getNames","sort","NameField","props","error","FormControl","fullWidth","TextField","field","required","variant","label","PhoneField","AddressField","CityField","PostcodeField","CountryField","InputLabel","htmlFor","Select","map","country","MenuItem","value","EmailField","errHelper","duplicateEmail","onChange","e","_event","duplicateEmailSetter","FormHelperText","UsernameField","duplicateUsername","duplicateNameSetter","PasswordField","useState","showPassword","setShowPassword","undefined","OutlinedInput","id","type","endAdornment","InputAdornment","position","IconButton","onClick","Visibility","VisibilityOff","RepeatedPasswordField","additionalError","isSubmitted","password","DateField","utils","DateFnsUtils","inputVariant","format","margin","onBlur","name","inputRef","ref","KeyboardButtonProps","helperText","FileField","renderText","dropzoneText","acceptedFiles","maxFileSize","AgbField","labelText","FormControlLabel","style","color","control","Checkbox","checked","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","height","width","form","submit","App","history","useHistory","classes","useForm","reValidateMode","watch","handleSubmit","formState","errors","setDuplicateUsername","setDuplicateEmail","watchPassword","sendForm","data","formData","FormData","append","address","city","phoneNumber","postcode","username","email","birthDate","toString","confirmationFiles","forEach","request","XMLHttpRequest","open","onload","readyState","status","push","responseText","localeCompare","send","Container","component","maxWidth","CssBaseline","className","Avatar","src","process","Typography","noValidate","onSubmit","Grid","container","item","xs","sm","defaultValue","rules","render","pattern","validate","repeatPassword","Date","date","today","year","getFullYear","month","getMonth","day","getDate","birth","age","age_month","age_day","getDay","checkIsTooYoung","files","length","reduce","accumulator","val","size","sitekey","checkbox","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.8faba4d7.chunk.js","sourcesContent":["import DateFnsUtils from \"@date-io/date-fns\";\nimport { Checkbox, FormControl, FormControlLabel, FormHelperText, IconButton, InputAdornment, InputLabel, MenuItem, OutlinedInput, Select, TextField } from \"@material-ui/core\"\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport {useState } from \"react\";\nimport { ControllerRenderProps, FieldError } from \"react-hook-form\"\nimport { IFormInput } from \"./App\"\n\nconst countryList = require('country-list');\nconst countries = countryList.getNames().sort()\n\nexport function NameField(props: { error: FieldError | undefined, field: ControllerRenderProps<IFormInput, \"name\"> }): JSX.Element {\n\n  if (!props.error) {\n    return <FormControl fullWidth>\n      <TextField {...props.field} required label=\"Full Name\" variant=\"outlined\" />\n    </FormControl>\n  }\n  return <FormControl error fullWidth>\n    <TextField {...props.field} error required variant=\"outlined\" label=\"Full Name\" />\n  </FormControl>\n\n}\n\nexport function PhoneField(props: { error: FieldError | undefined, field: ControllerRenderProps<IFormInput, \"phoneNumber\"> }): JSX.Element {\n\n  if (!props.error) {\n    return <FormControl fullWidth>\n      <TextField {...props.field} required label=\"Phone Number\" variant=\"outlined\" />\n    </FormControl>\n  }\n  return <FormControl error fullWidth>\n    <TextField {...props.field} error required variant=\"outlined\" label=\"Phone Number\" />\n  </FormControl>\n\n}\n\nexport function AddressField(props: { error: FieldError | undefined, field: ControllerRenderProps<IFormInput, \"address\"> }) {\n\n  if (!props.error) {\n    return <FormControl fullWidth>\n      <TextField {...props.field} required label=\"Address\" variant=\"outlined\" />\n    </FormControl>\n  }\n  return <FormControl error fullWidth>\n    <TextField {...props.field} error required variant=\"outlined\" label=\"Address\" />\n  </FormControl>\n}\n\nexport function CityField(props: { error: FieldError | undefined, field: ControllerRenderProps<IFormInput, \"city\"> }) {\n\n  if (!props.error) {\n    return <FormControl fullWidth>\n      <TextField {...props.field} required label=\"City\" variant=\"outlined\" />\n    </FormControl>\n  }\n  return <FormControl error fullWidth>\n    <TextField {...props.field} error required variant=\"outlined\" label=\"City\" />\n  </FormControl>\n}\n\nexport function PostcodeField(props: { error: FieldError | undefined, field: ControllerRenderProps<IFormInput, \"postcode\"> }) {\n\n  if (!props.error) {\n    return <FormControl fullWidth>\n      <TextField {...props.field} required label=\"Postcode\" variant=\"outlined\" />\n    </FormControl>\n  }\n  return <FormControl error fullWidth>\n    <TextField {...props.field} error required variant=\"outlined\" label=\"Postcode\" />\n  </FormControl>\n}\n\n\nexport function CountryField(props: { error: FieldError | undefined, field: ControllerRenderProps<IFormInput, \"country\"> }) {\n  if (!props.error) {\n    return (<FormControl variant=\"outlined\" fullWidth>\n      <InputLabel required>Country</InputLabel>\n      <Select  {...props.field}>\n        {countries.map((country: string) =>\n          <MenuItem key={country} value={country}>\n            {country}\n          </MenuItem>)}\n      </Select>\n    </FormControl>)\n  }\n  return <FormControl fullWidth variant=\"outlined\" error>\n    <InputLabel error required htmlFor=\"grouped-native-select\" >Country</InputLabel>\n    <Select {...props.field}>\n      {countries.map((country: string) =>\n        <MenuItem key={country} value={country}>\n          {country}\n        </MenuItem>)}\n    </Select>\n  </FormControl>\n}\n\n\nexport function EmailField(props: { error: FieldError | undefined, field: ControllerRenderProps<IFormInput, \"email\"> \nduplicateEmail: boolean, duplicateEmailSetter: any}) {\n  const onChange = (_event: any, field:  ControllerRenderProps<IFormInput, \"email\">) => {\n    if (props.duplicateEmail) props.duplicateEmailSetter(false)\n    field.onChange(_event)\n  }\n  const errHelper = props.duplicateEmail ? \"Email Already Taken\" : \"\"\n  if (!props.error && !props.duplicateEmail) {\n    return (<FormControl fullWidth>\n      <TextField {...props.field} required label=\"Email\"\n        variant=\"outlined\"\n        />\n    </FormControl>)\n  }\n  else {\n    return (<FormControl fullWidth>\n      <TextField {...props.field} required error\n        variant=\"outlined\"\n        label=\"Email\"\n        onChange={(e) => onChange(e, props.field)} />\n      <FormHelperText error> {errHelper} </FormHelperText>\n    </FormControl>)\n  }\n\n}\n\n\nexport function UsernameField(props: {\n  error: FieldError | undefined, field: ControllerRenderProps<IFormInput, \"username\">,\n  duplicateUsername: boolean, duplicateNameSetter: any\n}) {\n\n  const onChange = (_event: any, field:  ControllerRenderProps<IFormInput, \"username\">) => {\n    if (props.duplicateUsername) props.duplicateNameSetter(false)\n    field.onChange(_event)\n  }\n\n  const errHelper = props.duplicateUsername ? <>Username already taken </> : <>At least 4 characters <br /> No whitespaces</>\n  if (!props.error && !props.duplicateUsername) {\n    return (<FormControl fullWidth><TextField required {...props.field} variant=\"outlined\"\n      label=\"Username\" />\n      <FormHelperText>At least 4 characters<br />\n        No whitespaces </FormHelperText>\n    </FormControl>)\n  }\n\n  return (<FormControl fullWidth error><TextField error  {...props.field} onChange={(e) => onChange(e, props.field)} required label=\"Username\"\n     variant=\"outlined\" />\n    <FormHelperText error> {errHelper} </FormHelperText></FormControl>)\n\n}\n\n\nexport function PasswordField(props: { error: FieldError | undefined, field: ControllerRenderProps<IFormInput, \"password\"> }) {\n\n  let [showPassword, setShowPassword] = useState(false)\n\n  const changeVisibility = () => {\n    setShowPassword(!showPassword)\n  }\n  return (<FormControl variant=\"outlined\" required error={props.error !== undefined} fullWidth>\n    <InputLabel>Password</InputLabel>\n    <OutlinedInput\n      label=\"Password\"\n      id=\"standard-adornment-password\"\n      type={showPassword ? 'text' : 'password'}\n      {...props.field}\n      endAdornment={\n        <InputAdornment position=\"end\">\n          <IconButton\n            aria-label=\"toggle password visibility\" onClick={changeVisibility} >\n            {showPassword ? <Visibility /> : <VisibilityOff />}\n          </IconButton>\n        </InputAdornment>\n      }\n    />\n    <FormHelperText>At least 8 characters <br />At least one special character <br />At least one number</FormHelperText>\n  </FormControl>)\n\n}\n\n\nexport function RepeatedPasswordField(props: {\n  error: FieldError | undefined, field: ControllerRenderProps<IFormInput, \"repeatPassword\">,\n  password: string, isSubmitted: boolean\n}) {\n\n  let [showPassword, setShowPassword] = useState(false)\n  const changeVisibility = () => {\n    setShowPassword(!showPassword)\n  }\n  const additionalError = props.isSubmitted && props.password !== props.field.value\n  return <FormControl variant=\"outlined\" error={props.error !== undefined || additionalError} required fullWidth>\n    <InputLabel htmlFor=\"outlined-adornment-password\">Confirm Password</InputLabel>\n    <OutlinedInput\n      label=\"Confirm Password\"\n      id=\"standard-adornment-password-repeat\"\n      type={showPassword ? 'text' : 'password'}\n      {...props.field}\n      endAdornment={\n        <InputAdornment position=\"end\">\n          <IconButton\n            aria-label=\"toggle password visibility\"\n            onClick={changeVisibility}\n          >\n            {showPassword ? <Visibility /> : <VisibilityOff />}\n          </IconButton>\n        </InputAdornment>\n      }\n    />\n    <FormHelperText>{(props.error !== undefined || additionalError) ? 'Passwords must match' : ''}</FormHelperText>\n  </FormControl>\n}\n\nexport function DateField(props: { error: FieldError | undefined, field: ControllerRenderProps<IFormInput, \"birthDate\">}) {\n  if (props.error !== undefined) {\n    return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <FormControl fullWidth error>\n          <KeyboardDatePicker\n            error\n            inputVariant=\"outlined\"\n            variant=\"inline\"\n            format=\"dd/MM/yyyy\"\n            margin=\"normal\"\n            id=\"date-picker-inline\"\n            label=\"Date of birth\"\n            onChange={props.field.onChange}\n            onBlur={props.field.onBlur}\n            value={props.field.value}\n            name={props.field.name}\n            inputRef={props.field.ref}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n            helperText=\"You must be at least 18 years old\"\n          />\n        </FormControl>\n      </MuiPickersUtilsProvider>)\n  }\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <FormControl fullWidth required>\n        <KeyboardDatePicker\n          required\n          inputVariant=\"outlined\"\n          variant=\"inline\"\n          format=\"dd.MM.yyyy\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label=\"Date of birth\"\n          onChange={props.field.onChange}\n          onBlur={props.field.onBlur}\n          value={props.field.value}\n          name={props.field.name}\n          inputRef={props.field.ref}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </FormControl>\n    </MuiPickersUtilsProvider>\n  )\n\n}\n\n\nexport function FileField(props: { error: FieldError[] | undefined, field: ControllerRenderProps<IFormInput, \"confirmationFiles\">}) {\n\n  const renderText = props.error === undefined ? \"ID Confirmation\" : \"Please upload a valid combination of files\"\n  return (\n    <DropzoneArea dropzoneText={renderText} {...props.field} acceptedFiles={['image/jpeg', 'image/jpg', 'image/png', 'pdf']} maxFileSize={10000000}>\n                    {/* We only accept certain file types suitable for our cause*/}\n        <FormHelperText>jpeg, png, pdf <br/> 10MB per File <br/>50Mb Total</FormHelperText>\n    </DropzoneArea>\n  )\n}\n\nexport function AgbField(props: { error: FieldError | undefined, field: ControllerRenderProps<IFormInput, \"checkbox\">}) {\n  \n  const labelText: string = (props.error === undefined) ? \"I have read and accepted all terms and conditions as written here\" :\n    \"You must accept the terms and conditions\"\n  \n  if (props.error) {\n    return (<FormControlLabel style={{color: \"red\"}} control={<Checkbox\n      {...props.field} checked={props.field.value}\n      name= \"agb\"\n      color=\"primary\"\n    /> } label={labelText} /> )\n  \n  }\n\n  return (\n    <FormControlLabel control={<Checkbox\n        checked={props.field.value}\n        {...props.field}\n        name= \"agb\"\n        color=\"primary\"\n      />}\n      label={labelText} />\n)\n\n\n  \n}","import React, { useState } from 'react';\nimport './App.css';\nimport { useForm, Controller, SubmitHandler} from \"react-hook-form\";\nimport { Avatar, Button, Container, CssBaseline, Grid, makeStyles, Typography } from '@material-ui/core';\nimport { AddressField, AgbField, CityField, CountryField, DateField, EmailField, FileField, NameField, PasswordField, PhoneField,\n  PostcodeField, RepeatedPasswordField, UsernameField } from './utils';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { useHistory } from 'react-router-dom';\n\nexport interface IFormInput {\n  name: string,\n  phoneNumber: string,\n  address: string,\n  city: string,\n  postcode: string,\n  country: string\n  email: string,\n  username: string,\n  password: string,\n  repeatPassword: string,\n  birthDate: Date,\n  confirmationFiles: File[],\n  captchaString: string | null,\n  checkbox: boolean\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(2),\n    backgroundColor: \"white\",\n    height: '25%',\n    width: '25%'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nfunction checkIsTooYoung(date: Date) {\n    // check if too old\n    const today = new Date()\n    const year = today.getFullYear()\n    const month = today.getMonth()\n    const day = today.getDate();\n    const birth = date\n  \n    const age = year - birth.getFullYear()\n    const age_month = month - birth.getMonth()\n    const age_day = day - birth.getDay()\n  \n    // too young\n    return age < 18 || (age === 18 && age_month <= 0 && age_day <= 0)\n  \n}\n\nfunction checkDND(files: File[]) {\n  const reducer = (accumulator: number, val: File) => {\n    return accumulator + val.size\n  }\n\n  return files.length === 0 || files.reduce(reducer, 0) > 5000000\n}\n\nfunction App() {\n\n  let history = useHistory()\n  const classes = useStyles()\n  const {control, watch, handleSubmit ,formState: {isSubmitted, errors}} = useForm<IFormInput>({reValidateMode: 'onChange'})\n  const [duplicateUsername, setDuplicateUsername] = useState(false)\n  const [duplicateEmail, setDuplicateEmail] = useState(false)\n  const onSubmit: SubmitHandler<IFormInput> = data => sendForm(data);\n  const watchPassword = watch(\"password\")\n\n\n  const sendForm = (data: IFormInput) => {\n    const formData = new FormData()\n    formData.append(\"name\", data.name)\n    formData.append('address', data.address)\n    formData.append('city', data.city)\n    formData.append('phoneNumber', data.phoneNumber)\n    formData.append('postcode', data.postcode)\n    formData.append('country', data.country)\n    formData.append('username', data.username)\n    formData.append('email', data.email)\n    formData.append('password', data.password)\n    formData.append('dateOfBirth', data.birthDate.toString())\n    data.confirmationFiles.forEach((value)=> {\n      formData.append('idConfirmation', value)\n    })\n    //const blob = new Blob(data.confirmationFiles)\n    //formData.append('idConfirmation', blob)\n\n    // open the request\n    const request = new XMLHttpRequest()\n    request.open(\"POST\", \"http://localhost:3002/login\", true)\n    request.onload = (() => {\n      if (request.readyState === 4) {\n        if (request.status === 200) {\n          // we have successfully registered\n          history.push('/success')\n  \n        }\n        else if (request.status === 405)  {\n          if (request.responseText.localeCompare('Username already taken')=== 0){\n            setDuplicateUsername(true)\n          }\n          else if (request.responseText.localeCompare('Email already taken') === 0) {\n            setDuplicateEmail(true)\n          }\n          else if (request.responseText.localeCompare('Both already taken') === 0) {\n            setDuplicateEmail(true)\n            setDuplicateUsername(true)\n          }\n        }\n      }\n    });\n  \n    request.send(formData);\n  \n\n\n  }\n\n  return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline/>\n        <div className={classes.paper}>\n        <Avatar className={classes.avatar}  src={`${process.env.PUBLIC_URL}/tie_logo.png`}>\n         {/*<LockOutlinedIcon/> */}\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n             Sign up\n          </Typography>\n          <form noValidate className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={3}>\n          <Grid container spacing={1}>\n            {/* General information block */}\n            <Grid item xs={12} sm={6}>\n              <Controller\n               name=\"name\"\n               control={control}\n               defaultValue=\"\"\n               rules={{required: true}}\n               render={({ field }) => <NameField error={errors.name} field={field} />}\n               />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Controller\n              name=\"phoneNumber\"\n              control={control}\n              defaultValue=\"\"\n              rules={{required: true,\n              pattern: /^\\+(?:[0-9] ?){6,14}[0-9]$/}}\n              render={({ field }) => <PhoneField error={errors.phoneNumber} field={field} />}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <Controller\n              name=\"address\"\n              control={control}\n              defaultValue=\"\"\n              rules={{required: true}}\n              render={({ field }) => <AddressField error={errors.address} field={field}/>}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Controller\n               name=\"city\"\n               control={control}\n               defaultValue=\"\"\n               rules={{required: true}}\n               render={({ field }) => <CityField error={errors.city} field={field}/>}\n               />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Controller\n              name=\"postcode\"\n              control={control}\n              defaultValue=\"\"\n              rules={{required: true}}\n              render={({ field }) => <PostcodeField error={errors.postcode} field={field}/>}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <Controller\n              name=\"country\"\n              control={control}\n              defaultValue=\"\"\n              rules={{required: true}}\n              render={({ field }) => <CountryField error={errors.country} field={field}/>}\n              />\n            </Grid>\n            {/* User information block */}\n            <Grid item xs={12} sm={6}>\n              <Controller\n              name=\"email\"\n              control={control}\n              defaultValue=\"\"\n              rules={{required: true,\n              pattern:  /^\\S+@\\S+\\.\\S+$/}}\n              render={({ field }) => <EmailField duplicateEmailSetter={setDuplicateEmail} duplicateEmail={duplicateEmail} error={errors.email} field={field}/>}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n            <Controller\n              name=\"username\"\n              control={control}\n              defaultValue=\"\"\n              rules={{required: true,\n              pattern:  /^[A-Za-z]{1}[A-Za-z0-9+._-]{3,}$/}}\n              \n              render={({ field }) => <UsernameField duplicateNameSetter={setDuplicateUsername} error={errors.username} duplicateUsername={duplicateUsername} field={field}/>}\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n            <Controller\n              name=\"password\"\n              control={control}\n              defaultValue=\"\"\n              rules={{required: true,\n              pattern:   /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[-_+@$!%*#?&])[A-Za-z\\d-_+@$!%*#?&]{8,}$/}}\n              render={({ field }) => <PasswordField error={errors.password} field={field}/>}\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n            <Controller\n              name=\"repeatPassword\"\n              control={control}\n              defaultValue=\"\"\n              rules={{required: true,\n              validate: (value) => {return value.localeCompare(watchPassword) === 0}}}\n              render={({ field }) => <RepeatedPasswordField isSubmitted={isSubmitted} password={watchPassword} error={errors.repeatPassword} field={field}/>}\n              />\n              \n            </Grid>\n              <Grid item xs={12}>\n                <Controller\n                name=\"birthDate\"\n                control={control}\n                defaultValue={new Date()}\n                rules={{required: true,\n                validate: value => { return !checkIsTooYoung(value)}}}\n                render={({ field }) => <DateField error={errors.birthDate} field={field}/>}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Controller\n                name=\"confirmationFiles\"\n                control={control}\n                defaultValue={[]}\n                rules={{required: true,\n                validate: (value) => {return !checkDND(value)}}}\n                render={({ field }) => <FileField error={errors.confirmationFiles} field={field}/>}\n                />\n              </Grid>\n              {/* Captcha */}\n              <Grid item xs={12}>\n                <Controller\n                name=\"captchaString\"\n                control={control}\n                defaultValue={null}\n                rules={{required: true,\n                validate: (value) => {return !(value===null)}}}\n                render={({ field }) => <ReCAPTCHA sitekey=\"6LecxjAbAAAAAArf0n8KeC9-Yw3l5cMxT5Hg6aDR\" {...field}></ReCAPTCHA>}\n                />\n              </Grid>\n              {/* AGB Checkbox */}\n              <Grid item xs={12}>\n                <Controller\n                name=\"checkbox\"\n                control={control}\n                defaultValue={false}\n                rules={{required: true,\n                validate: (value) => {return value}}}\n                render={({ field }) => <AgbField error={errors.checkbox} field={field} />}\n                />\n              </Grid>\n\n          </Grid>\n        </Grid>\n        <Button className={classes.submit}\n              variant=\"contained\"\n              color=\"primary\"\n              type =\"submit\"\n              fullWidth>\n        Submit\n        </Button>\n        </form>\n        </div>\n      </Container>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Route, Router, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\n\n/**\n * \n * @returns Basic JSX element displaying a text\n */\n function Success() : JSX.Element {\n  return <h1>Registration successful</h1>\n}\n\nconst history = createBrowserHistory()\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* */}\n    <Router history={history}>\n      <Switch>\n      <Route exact path=\"/\" component={App}/>\n          {/** We route to a confirmation page if the login was successful */}\n      <Route exact path=\"/success\" component={Success} />\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}